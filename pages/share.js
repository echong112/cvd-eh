import Head from 'next/head';
import { useEffect, useRef, useState } from 'react';
import { getSingleVideoById, getVideos } from '../src/actions/fl';

import Videos from '../src/components/Videos/Videos';
import Loading from '../src/components/Layout/Loading';
import { useRouter } from 'next/router';
import VideoPage from '../src/components/Page/VideoPage';

export default function Home() {
  const router = useRouter();
  const [videos, setVideos] = useState([]);
  const [singleVideo, setSingleVideo] = useState(null);
  const [startAfter, setStartAfter] = useState(null);
  const [scrollPosition, setScrollPosition] = useState(0);
  const [isLoading, setIsLoading] = useState(false);
  const [detail, setDetail] = useState('');
  let videoContainerRef = useRef(null);

  const fetchVideos = async () => {
    setIsLoading(true);
    const response = await getVideos(startAfter);
    if (response) {
      const entries = Object.values(response);
      const last = entries[entries.length - 1];
      setVideos([...videos, ...entries]);
      setStartAfter(last.publishDate);
    }
    setIsLoading(false);
  };

  const handleScroll = async () => {
    const position = window.pageYOffset;
    setScrollPosition(position);
  };

  useEffect(() => {
    async function getData() {
      if (!router.query.detail) {
        await fetchVideos();
      } else {
        setDetail(router.query.detail);
        const singleVideoRes = await getSingleVideoById(router.query.detail);
        setSingleVideo(singleVideoRes);
      }
    }
    getData();
    window.addEventListener('scroll', handleScroll, { passive: true });
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  useEffect(() => {
    async function getData() {
      if (router.query.detail) {
        setDetail(router.query.detail);
        if (!singleVideo) {
          const singleVideoRes = await getSingleVideoById(router.query.detail);
          setSingleVideo(singleVideoRes);
        }
      } else {
        setDetail('');
      }
    }
    getData();
  }, [router]);

  useEffect(() => {
    async function getData() {
      if (videoContainerRef) {
        const videoContainer = videoContainerRef.getBoundingClientRect();
        if (
          scrollPosition + window.innerHeight > videoContainer.bottom ||
          window.pageYOffset === 0
        ) {
          await fetchVideos();
        }
      }
    }
    getData();
  }, [scrollPosition]);

  return (
    <div>
      <Head>
        <title>Courageous Video Directory</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div ref={(ref) => (videoContainerRef = ref)}>
        {videos && detail === '' && <Videos title={'Latest Videos'} videos={videos} />}
        {singleVideo && <VideoPage videoId={detail} allVideos={videos} />}
      </div>
      {isLoading && <Loading />}
    </div>
  );
}
